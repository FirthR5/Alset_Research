@model IEnumerable<Alset_Research.DTO.JournalDTO>

@{
    ViewData["Title"] = "Journals";
}
<style type="text/css">
    .journal_container {
        background: #ccc;
        text-align: center;
        padding: 5px;
        height: 500px;
        overflow: auto;
    }
</style>

@section scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf_viewer.min.css" rel="stylesheet" type="text/css" />
    <script src="~/js/pdfViewer.js"></script>
}



<div class="text-center">

	<h1>Journals</h1>
    <section id="HomeJournals">
        @foreach (var item in Model)
        {
            <div class="journal-item">
                <h3>@Html.DisplayFor(modelItem => item.Title)</h3>
                <p><strong>Description:</strong> @Html.DisplayFor(modelItem => item.Description)</p>
                <p><strong>Fecha de Publicación:</strong> @Html.DisplayFor(modelItem => item.PublicationDate)</p>
                <p><strong>Investigador:</strong> @Html.DisplayFor(modelItem => item.ResearcherFirstName) @Html.DisplayFor(modelItem => item.ResearcherLastName)</p>
                <div  class="journal_container" id="pdf_container_@item.Id"> </div>

                @* <button onclick="LoadPdfFromUrl('@Url.Content("~/journals/Paul-Li-MSR-Tech-Report.pdf")', '@item.Id')">Ver PDF</button> *@
                @* <button onclick="LoadPdfFromUrl('@Url.Content("~/journals/" + item.PDFFile)', '@item.Id')">Ver PDF</button> *@
                
                <script type="text/javascript">
                    function LoadPdfWithDelay(url, containerId) {
                        setTimeout(function () {
                            LoadPdfFromUrl(url, containerId);
                        }, 2000);
                    }

                    // LoadPdfWithDelay('@Url.Content("~/journals/Paul-Li-MSR-Tech-Report.pdf")', '@item.Id')
                    LoadPdfWithDelay('@Url.Content("~/journals/" + item.PDFFile)', '@item.Id')

                    @*LoadPdfFromUrl('@Url.Content("~/journals/" + item.PDFFile)', '@item.Id');*@
                </script>

            </div>
        }
    </section>



</div>

@* @section scripts {
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf_viewer.min.css" rel="stylesheet" type="text/css" />

<script type="text/javascript">
    var pdfjsLib = window['pdfjs-dist/build/pdf'];
    pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.worker.min.js';
    var scale = 1; // Escala de zoom
    var resolution = 1; // Resolución de PDF

    function LoadPdfFromUrl(url, containerId) {
        // Obtener el contenedor correspondiente según el ID del journal
        var pdf_container = document.getElementById("pdf_container_" + containerId);
        pdf_container.innerHTML = ""; // Limpiar el contenedor previo

        // Cargar el PDF
        pdfjsLib.getDocument(url).promise.then(function (pdfDoc) {
            // Renderizar todas las páginas del PDF
            for (var i = 1; i <= pdfDoc.numPages; i++) {
                RenderPage(pdfDoc, pdf_container, i);
            }
        });
    }

    function RenderPage(pdfDoc, pdf_container, num) {
        pdfDoc.getPage(num).then(function (page) {
            // Crear un nuevo elemento canvas
            var canvas = document.createElement('canvas');
            var ctx = canvas.getContext('2d');
            pdf_container.appendChild(canvas);

            // Establecer dimensiones del canvas
            var viewport = page.getViewport({ scale: scale });
            canvas.height = resolution * viewport.height;
            canvas.width = resolution * viewport.width;

            // Renderizar la página del PDF
            var renderContext = {
                canvasContext: ctx,
                viewport: viewport,
                transform: [resolution, 0, 0, resolution, 0, 0]
            };

            page.render(renderContext);
        });
    }
</script> 
}*@
